[{"/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/App.js":"1","/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/index.js":"2","/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/reportWebVitals.js":"3","/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/SideExpansionPanel/index.jsx":"4","/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/Login/index.jsx":"5","/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/Icon/index.jsx":"6","/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/ViewArea/index.jsx":"7","/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/Header/index.jsx":"8","/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/UnderConstruction/index.jsx":"9","/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/routes.js":"10","/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/ListItem/index.jsx":"11","/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/MailBox/index.jsx":"12","/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/MailBox/MailBoxControlPanel/MailBoxCategories.jsx":"13","/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/MailBox/MailBoxControlPanel/index.jsx":"14","/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/MailBox/MailBoxControlPanel/MailBoxFolders.jsx":"15","/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/MailBox/MailBoxControlPanel/MailBoxLabels.jsx":"16","/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/MailBox/MailActionBar/index.jsx":"17","/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/MailBox/MailList/index.jsx":"18","/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/SearchBox/index.jsx":"19","/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/MailBox/MailList/MailListElement.jsx":"20","/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/Label/index.jsx":"21","/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/MailBox/MailDetails/index.jsx":"22","/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/Modal/index.jsx":"23","/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/MailBox/MailBoxControlPanel/CreateMail.jsx":"24","/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Services/LoginService.js":"25","/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Common/Api.js":"26","/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Services/MailService.js":"27"},{"size":921,"mtime":1610977041829,"results":"28","hashOfConfig":"29"},{"size":540,"mtime":1610713923090,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1610692592798,"results":"31","hashOfConfig":"29"},{"size":2689,"mtime":1611044365900,"results":"32","hashOfConfig":"29"},{"size":2249,"mtime":1611044327757,"results":"33","hashOfConfig":"29"},{"size":603,"mtime":1610786645991,"results":"34","hashOfConfig":"29"},{"size":476,"mtime":1610861350000,"results":"35","hashOfConfig":"29"},{"size":1071,"mtime":1610859864036,"results":"36","hashOfConfig":"29"},{"size":315,"mtime":1610956604922,"results":"37","hashOfConfig":"29"},{"size":1034,"mtime":1610798418926,"results":"38","hashOfConfig":"29"},{"size":417,"mtime":1610970418178,"results":"39","hashOfConfig":"29"},{"size":1774,"mtime":1611046167319,"results":"40","hashOfConfig":"29"},{"size":854,"mtime":1610862517609,"results":"41","hashOfConfig":"29"},{"size":921,"mtime":1611046276465,"results":"42","hashOfConfig":"29"},{"size":2461,"mtime":1611046507268,"results":"43","hashOfConfig":"29"},{"size":632,"mtime":1610860478851,"results":"44","hashOfConfig":"29"},{"size":1748,"mtime":1610867977173,"results":"45","hashOfConfig":"29"},{"size":827,"mtime":1611044359448,"results":"46","hashOfConfig":"29"},{"size":574,"mtime":1610808210129,"results":"47","hashOfConfig":"29"},{"size":1119,"mtime":1611033877931,"results":"48","hashOfConfig":"29"},{"size":213,"mtime":1610868083925,"results":"49","hashOfConfig":"29"},{"size":1494,"mtime":1611039271075,"results":"50","hashOfConfig":"29"},{"size":599,"mtime":1610970177962,"results":"51","hashOfConfig":"29"},{"size":2033,"mtime":1611032924973,"results":"52","hashOfConfig":"29"},{"size":369,"mtime":1611026457344,"results":"53","hashOfConfig":"29"},{"size":683,"mtime":1611042938752,"results":"54","hashOfConfig":"29"},{"size":1657,"mtime":1611042943501,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},"zajqa1",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"78"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"59"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"59"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"65"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"65"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/App.js",["122"],"import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport Login from './Components/Login';\nimport { withRouter, Route, Redirect } from 'react-router-dom';\nimport SideExpansionPanel from './Components/SideExpansionPanel';\nimport ViewArea from './Components/ViewArea';\n\nfunction App({ location }) {\n  const [isPanelOpen, setIsPanelOpen] = useState(false);\n  \n  return (\n    <div className=\"app__container\">\n      {location.pathname === '/login' ? (\n        <Route path=\"/login\" component={Login} />\n      ) : localStorage.getItem('userdetails') ? (\n        <React.Fragment>\n          <SideExpansionPanel isPanelOpen={isPanelOpen} />\n          <ViewArea\n            isPanelOpen={isPanelOpen}\n            togglePanel={() => setIsPanelOpen(!isPanelOpen)}\n          />\n        </React.Fragment>\n      ) : (\n        <Redirect push to=\"/login\" />\n      )}\n    </div>\n  );\n}\n\nexport default withRouter(App);\n",["123","124"],"/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/index.js",[],["125","126"],"/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/reportWebVitals.js",[],["127","128"],"/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/SideExpansionPanel/index.jsx",["129"],"/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/Login/index.jsx",["130","131","132","133"],"import React, { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport './Login.scss';\nimport { withRouter, Route, Redirect } from 'react-router-dom';\nimport { loginService } from '../../Services/LoginService';\n\nfunction Login() {\n  const [formValue, setFormValue] = useState({\n    username: '',\n    password: '',\n  });\n\n  const updateFormValue = (e, key) => {\n    setFormValue({\n      ...formValue,\n      [key]: e.target.value,\n    });\n  };\n\n  const signIn = async () => {\n    const formData = new FormData();\n    formData.append('username', formValue.username);\n    formData.append('password', formValue.password);\n    const serviceResponse = await loginService(formData);\n    if (serviceResponse.status === 200) {\n      localStorage.setItem('userdetails',  JSON.stringify(serviceResponse.data));\n      localStorage.setItem('authenticationToken', serviceResponse.data.token)\n      window.location.href = '/dashboard';\n    }\n  };\n\n  return (\n    <div className=\"w-100 d-flex\">\n      <div className=\"w-65\" style={{ height: '100%', overflow: 'hidden' }}>\n        <img\n          style={{ maxHeight: '850px' }}\n          src={`${window.location.origin}/images/login.jpg`}\n        />\n      </div>\n      <div className=\"w-35\">\n        <div className=\"login\">\n          <div className=\"header\">\n            <h3>Login</h3>\n          </div>\n          <div className=\"text-field\">\n            <TextField\n              type=\"text\"\n              name=\"email\"\n              placeholder=\"Email\"\n              variant=\"outlined\"\n              size=\"small\"\n              onChange={(e) => updateFormValue(e, 'username')}\n            />\n          </div>\n          <div className=\"text-field\">\n            <TextField\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Password\"\n              variant=\"outlined\"\n              size=\"small\"\n              onChange={(e) => updateFormValue(e, 'password')}\n            />\n          </div>\n          <div className=\"btn-holder\">\n            <button size=\"normal\" className=\"btn\" onClick={() => signIn()}>\n              Sign In\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default withRouter(Login);\n",["134","135"],"/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/Icon/index.jsx",[],"/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/ViewArea/index.jsx",[],"/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/Header/index.jsx",[],["136","137"],"/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/UnderConstruction/index.jsx",["138"],"/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\n\nfunction UnderConstruction() {\n  const imagePath = `${window.location.origin}/images/under-construction.png`;\n  return <img style={{'width': '100%', minHeight: '92vh'}} src={imagePath} />;\n}\n\nexport default UnderConstruction;\n","/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/routes.js",[],"/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/ListItem/index.jsx",[],"/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/MailBox/index.jsx",["139","140"],"import React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport './MailBox.scss';\nimport MailBoxControlPanel from './MailBoxControlPanel';\nimport MailActionBar from './MailActionBar';\nimport MailList from './MailList';\nimport MailDetails from './MailDetails';\n\nfunction MailBox({}) {\n  const [selectedMailDeatils, setSelectedMailDetails] = useState({\n    id: null,\n    header: '',\n    label: '',\n    count: 0,\n  });\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [selectedFolder, setSelectedFolder] = useState('inbox');\n\n  const viewMailDetails = (mailDeatils) => {\n    setSelectedMailDetails({\n      id: mailDeatils.id,\n      header: mailDeatils.subject,\n      label: mailDeatils.label,\n    });\n    if (!mailDeatils.is_read) {\n      setUnreadCount(unreadCount + 1);\n    }\n  };\n\n  const resetView = () => {\n    setSelectedMailDetails({\n      id: null,\n      header: '',\n      lable: '',\n    });\n  };\n  return (\n    <div className=\"w-100 d-flex mailbox\">\n      <div className=\"w-30  m-t-2 \">\n        <MailBoxControlPanel\n          selectedFolder={selectedFolder}\n          unreadCount={unreadCount}\n        />\n      </div>\n      <div className=\"w-67 m-t-2 m-r-2 mail__list\">\n        <MailActionBar\n          header={selectedMailDeatils.header || selectedFolder}\n          isFolder={!selectedMailDeatils.id}\n          viewList={resetView}\n          label={selectedMailDeatils.label}\n        />\n        {!selectedMailDeatils.id && (\n          <MailList viewMailDetails={viewMailDetails} />\n        )}\n        {selectedMailDeatils.id && (\n          <MailDetails\n            mailId={selectedMailDeatils.id}\n            folder={selectedFolder}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\nexport default withRouter(MailBox);\n","/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/MailBox/MailBoxControlPanel/MailBoxCategories.jsx",[],"/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/MailBox/MailBoxControlPanel/index.jsx",[],"/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/MailBox/MailBoxControlPanel/MailBoxFolders.jsx",["141"],"import React, { useEffect, useState } from 'react';\nimport ListItem from '../../ListItem';\nimport Label from '../../Label';\nimport { getMailFolderService } from '../../../Services/MailService';\nconst mailFoldersDict = {\n  inbox: {\n    folderDisplayname: 'Inbox',\n    iconName: 'inbox',\n    id: 'inbox',\n    color: 'bg--orange',\n  },\n  sent: { folderDisplayname: 'Sent', id: 'sent', iconName: 'mail-sent' },\n  important: {\n    folderDisplayname: 'Important',\n    id: 'important',\n    iconName: 'mail-important',\n  },\n  draft: {\n    folderDisplayname: 'Draft',\n    iconName: 'draft',\n    id: 'draft',\n    color: 'bg--red',\n  },\n  trash: { folderDisplayname: 'Trash', id: 'trash', iconName: 'trash' },\n};\n\nfunction MailBoxFolders({ selectedFolder, unreadCount }) {\n  const [folderList, setFolderList] = useState([]);\n\n  useEffect(() => {\n    console.log('test12');\n    getMailFoldersData();\n  }, []);\n\n  useEffect(() => {\n    console.log('test_count', unreadCount);\n    const folderListCpy = [...folderList];\n    folderListCpy.forEach((folder) => {\n      if (selectedFolder === folder.id) {\n        console.log(selectedFolder, folder.id);\n        folder.totalUnread -= 1;\n      }\n    });\n    console.log(folderListCpy);\n    setFolderList(folderListCpy);\n  }, [unreadCount]);\n\n  const getMailFoldersData = async () => {\n    const serviceResponse = await getMailFolderService();\n    if (serviceResponse && serviceResponse.status === 200) {\n      const mailFolderDatas = serviceResponse.data.mail_folders;\n      const folderListCpy = [];\n      mailFolderDatas.forEach((data) => {\n        const folderData = mailFoldersDict[data.folder_name];\n        if (folderData && data.unread_count) {\n          folderData['totalUnread'] = data.unread_count;\n        }\n        folderListCpy.push(folderData);\n      });\n      setFolderList(folderListCpy);\n    }\n  };\n\n  return (\n    <div className=\"w-100\">\n      <h4 className=\"m-v-5 mailbox__controlpanel__header\">FOLDERS</h4>\n      {folderList.map((folder) => (\n        <div className=\"d-flex ai-c m-v-4 folder__item jc-sb\">\n          <ListItem\n            itemName={folder.folderDisplayname}\n            itemIconName={folder.iconName}\n            iconColor=\"mail__folder__icon--color\"\n          />\n          {folder.totalUnread && folder.totalUnread !== 0 && (\n            <Label content={folder.totalUnread} bgColorClass={folder.color} />\n          )}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default MailBoxFolders;\n","/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/MailBox/MailBoxControlPanel/MailBoxLabels.jsx",[],"/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/MailBox/MailActionBar/index.jsx",[],"/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/MailBox/MailList/index.jsx",[],"/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/SearchBox/index.jsx",["142"],"import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport './SearchBox.scss';\n\nfunction SearchBox({ name, placeholder, onSubmit }) {\n  const [searchValue, setSearchValue] = useState('');\n  return (\n    <div className=\"d-flex\">\n      <TextField\n        type=\"text\"\n        name={name}\n        placeholder={placeholder}\n        variant=\"outlined\"\n        size=\"small\"\n        onChange={(e) => setSearchValue(e.target.value)}\n      />\n      <button className=\"btn__search\">Search</button>\n    </div>\n  );\n}\n\nexport default SearchBox;\n","/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/MailBox/MailList/MailListElement.jsx",[],"/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/Label/index.jsx",[],"/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/MailBox/MailDetails/index.jsx",["143","144","145"],"import React, { useState, useEffect } from 'react';\nimport './MailDetails.scss';\nimport Avatar from '@material-ui/core/Avatar';\nimport { getMailDetailService } from '../../../Services/MailService';\n\nfunction MailDetails({ mailId, folder }) {\n  const [mailDetails, setMailDetails] = useState({});\n  useEffect(() => {\n    getmailDetails(mailId);\n  }, [mailId]);\n  const getmailDetails = async (mailId) => {\n    const serviceResponse = await getMailDetailService(mailId, folder);\n    if (serviceResponse && serviceResponse.status == 200) {\n      setMailDetails(serviceResponse.data.mail_details)\n    }\n  };\n  const iconPath = `${window.location.origin}/images/mail.png`;\n  return (\n    <div className=\"mail__details\">\n      <div className=\"mail__details__header d-flex jc-sb\">\n        <div className=\"d-flex w-50 ai-c\">\n          <Avatar\n            alt=\"User\"\n            src=\"https://i.pravatar.cc/200?img=68\"\n            className=\"avatar m-r-4\"\n          />\n          <div>\n            <div className=\"mail__user__name \">{mailDetails.username}</div>\n            <div className=\"mail__user__emailid m-v-2\">{mailDetails.user_email}</div>\n            <div className=\"mail__user__recipients\">to:me</div>\n          </div>\n        </div>\n        <div className=\"mail__time \">Today 08:45 PM</div>\n      </div>\n      <div className=\"mail__details__content m-t-2\">\n        <p className=\"content\">\n          {mailDetails.content}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default MailDetails;\n","/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/Modal/index.jsx",[],"/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Components/MailBox/MailBoxControlPanel/CreateMail.jsx",[],"/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Services/LoginService.js",[],"/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Common/Api.js",[],"/Users/santhoshmuthusamy/Documents/Tutorial/crm/src/Services/MailService.js",[],{"ruleId":"146","severity":1,"message":"147","line":1,"column":27,"nodeType":"148","messageId":"149","endLine":1,"endColumn":36},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"150","replacedBy":"154"},{"ruleId":"152","replacedBy":"155"},{"ruleId":"150","replacedBy":"156"},{"ruleId":"152","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":64,"column":6,"nodeType":"160","endLine":64,"endColumn":16,"suggestions":"161"},{"ruleId":"146","severity":1,"message":"147","line":1,"column":27,"nodeType":"148","messageId":"149","endLine":1,"endColumn":36},{"ruleId":"146","severity":1,"message":"162","line":4,"column":22,"nodeType":"148","messageId":"149","endLine":4,"endColumn":27},{"ruleId":"146","severity":1,"message":"163","line":4,"column":29,"nodeType":"148","messageId":"149","endLine":4,"endColumn":37},{"ruleId":"164","severity":1,"message":"165","line":35,"column":9,"nodeType":"166","endLine":38,"endColumn":11},{"ruleId":"150","replacedBy":"167"},{"ruleId":"152","replacedBy":"168"},{"ruleId":"150","replacedBy":"169"},{"ruleId":"152","replacedBy":"170"},{"ruleId":"164","severity":1,"message":"165","line":6,"column":10,"nodeType":"166","endLine":6,"endColumn":78},{"ruleId":"171","severity":1,"message":"172","line":9,"column":18,"nodeType":"173","messageId":"174","endLine":9,"endColumn":20},{"ruleId":"146","severity":1,"message":"175","line":17,"column":26,"nodeType":"148","messageId":"149","endLine":17,"endColumn":43},{"ruleId":"158","severity":1,"message":"176","line":46,"column":6,"nodeType":"160","endLine":46,"endColumn":19,"suggestions":"177"},{"ruleId":"146","severity":1,"message":"178","line":6,"column":10,"nodeType":"148","messageId":"149","endLine":6,"endColumn":21},{"ruleId":"158","severity":1,"message":"179","line":10,"column":6,"nodeType":"160","endLine":10,"endColumn":14,"suggestions":"180"},{"ruleId":"181","severity":1,"message":"182","line":13,"column":51,"nodeType":"183","messageId":"174","endLine":13,"endColumn":53},{"ruleId":"146","severity":1,"message":"184","line":17,"column":9,"nodeType":"148","messageId":"149","endLine":17,"endColumn":17},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-native-reassign",["185"],"no-negated-in-lhs",["186"],["185"],["186"],["185"],["186"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'curretRoutePath'. Either include it or remove the dependency array.","ArrayExpression",["187"],"'Route' is defined but never used.","'Redirect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["185"],["186"],["185"],["186"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'setSelectedFolder' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'folderList' and 'selectedFolder'. Either include them or remove the dependency array.",["188"],"'searchValue' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getmailDetails'. Either include it or remove the dependency array.",["189"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'iconPath' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},"Update the dependencies array to be: [curretRoutePath, location]",{"range":"196","text":"197"},"Update the dependencies array to be: [folderList, selectedFolder, unreadCount]",{"range":"198","text":"199"},"Update the dependencies array to be: [getmailDetails, mailId]",{"range":"200","text":"201"},[2106,2116],"[curretRoutePath, location]",[1256,1269],"[folderList, selectedFolder, unreadCount]",[349,357],"[getmailDetails, mailId]"]